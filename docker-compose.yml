services:
  expense-tracker:
    image: expense-tracker:latest
    container_name: expense-tracker
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      # Add build args for better caching
      args:
        BUILDKIT_INLINE_CACHE: 1
      # Use BuildKit for faster builds
      target: runtime
    ports:
      - "3000:3000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://103.80.162.46:9092//opt/h2-data/expensedb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;ACCESS_MODE_DATA=rw
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_H2_CONSOLE_PATH=/h2-console
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
      # Firebase configuration
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-}
      # File upload configuration (reduced since files go to Firebase Storage)
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=10MB
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=10MB
      - SPRING_SERVLET_MULTIPART_LOCATION=/tmp
      # Optimized JVM settings for Raspberry Pi
      - JAVA_OPTS=-Xms256m -Xmx448m -XX:+UseG1GC -XX:G1HeapRegionSize=4m -XX:+UseStringDeduplication
      - LOGGING_LEVEL_COM_LAVISH_EXPENSETRACKER_CONTROLLER=DEBUG
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_FILE_NAME=/app/logs/expense-tracker.log
      - TINI_SUBREAPER=1
    volumes:
      - h2-data:/app/h2-data
      - ./logs:/app/logs:rw
      # Add Gradle cache volume for faster rebuilds
      - gradle-cache:/root/.gradle
    restart: unless-stopped
    networks:
      - expense-network
    # Fix user permissions for mounted volumes
    user: "0:0"  # Start as root to fix permissions, entrypoint will switch to appuser
    # Ensure directories exist on host with correct permissions
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.5'  # Increased for better build performance
          memory: 768M  # Increased for build process
    init: true
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  expense-network:
    driver: bridge

volumes:
  h2-data:
    driver: local
  gradle-cache:
    driver: local
