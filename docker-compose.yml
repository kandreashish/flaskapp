services:
  expense-tracker:
    image: expense-tracker:latest
    container_name: expense-tracker
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      # Add build args for better caching
      args:
        BUILDKIT_INLINE_CACHE: 1
      # Use BuildKit for faster builds
      target: runtime
    ports:
      - "3000:3000"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_H2_CONSOLE_ENABLED=${SPRING_H2_CONSOLE_ENABLED}
      - SPRING_H2_CONSOLE_PATH=${SPRING_H2_CONSOLE_PATH}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
      - SPRING_SQL_INIT_MODE=${SPRING_SQL_INIT_MODE}
      # Firebase configuration
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      # File upload configuration
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}
      - SPRING_SERVLET_MULTIPART_LOCATION=${SPRING_SERVLET_MULTIPART_LOCATION}
      # JVM settings
      - JAVA_OPTS=${JAVA_OPTS}
      # Logging configuration
      - LOGGING_LEVEL_COM_LAVISH_EXPENSETRACKER_CONTROLLER=${LOGGING_LEVEL_COM_LAVISH_EXPENSETRACKER_CONTROLLER}
      - LOGGING_LEVEL_ROOT=${LOGGING_LEVEL_ROOT}
      - LOGGING_FILE_NAME=${LOGGING_FILE_NAME}
      - TINI_SUBREAPER=${TINI_SUBREAPER}
    volumes:
      - h2-data:/app/h2-data
      - ./logs:/app/logs:rw
      # Add Gradle cache volume for faster rebuilds
      - gradle-cache:/root/.gradle
    restart: unless-stopped
    networks:
      - expense-network
    # Fix user permissions for mounted volumes
    user: "0:0"  # Start as root to fix permissions, entrypoint will switch to appuser
    # Ensure directories exist on host with correct permissions
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.5'  # Increased for better build performance
          memory: 768M  # Increased for build process
    init: true
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  expense-network:
    driver: bridge

volumes:
  h2-data:
    driver: local
  gradle-cache:
    driver: local
