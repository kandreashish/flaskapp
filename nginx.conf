upstream backend {
    # Load balancing across the 3 app instances
    server app-1:3000 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Increase client max body size for file uploads
    client_max_body_size 10M;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Handle file requests - serve directly from shared volume with improved fallback
    location /api/files/ {
        # Add debug headers for troubleshooting
        add_header X-Debug-Path "/app/uploads$uri" always;
        add_header X-Debug-Request-URI "$request_uri" always;

        # Try multiple locations for file serving
        alias /app/uploads/;

        # First try to serve file directly
        try_files $uri @backend_fallback;

        # Set proper headers for image files
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            add_header X-Served-By "nginx-direct" always;

            # Enable CORS for preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
    }

    # Fallback for file requests with better error handling
    location @backend_fallback {
        add_header X-Served-By "backend-fallback" always;
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Handle errors from backend
        proxy_intercept_errors on;
        error_page 404 = @file_not_found;
    }

    # Handle file not found errors
    location @file_not_found {
        add_header Content-Type application/json;
        return 404 '{"error": "File not found", "path": "$request_uri"}';
    }

    # Main application routes
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
