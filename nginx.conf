events {
    worker_connections 1024;
    use epoll;  # Better performance on Linux
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enable sendfile for better performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Enhanced Gzip compression settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Proxy cache configuration for images
    proxy_cache_path /var/cache/nginx/images
                     levels=1:2
                     keys_zone=image_cache:10m
                     max_size=1g
                     inactive=60m
                     use_temp_path=off;

    # Rate limiting for image requests
    limit_req_zone $binary_remote_addr zone=image_limit:10m rate=20r/s;

    # Load-balanced backend with connection pooling
    upstream backend_servers {
        server 192.168.1.5:3000 max_fails=3 fail_timeout=30s weight=1;
        server 192.168.1.6:3000 max_fails=3 fail_timeout=30s weight=1;

        # Enable keepalive connections to backend
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    server {
        listen 80;
        server_name simpleexpense.ddns.net;

        # Keep .well-known for certificate renewal
        location /.well-known/ {
            root /var/www/html;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
       listen 443 ssl;

        ssl                  on;
        ssl_certificate      /etc/ssl/certificate.crt;
        ssl_certificate_key  /etc/ssl/private.key;

        # Max upload size
        client_max_body_size 5M;
        client_body_buffer_size 128k;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Specific optimization for image files
        location ~* ^/api/files/profile-pics/(.+\.(jpg|jpeg|png|gif|webp))$ {
            # Apply rate limiting
            limit_req zone=image_limit burst=30 nodelay;

            # Enable proxy caching for images
            proxy_cache image_cache;
            proxy_cache_valid 200 302 30d;  # Cache successful responses for 30 days
            proxy_cache_valid 404 1m;       # Cache 404s for 1 minute
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            proxy_cache_revalidate on;

            # Add cache status headers for debugging
            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-Upstream-Server $upstream_addr always;

            # Set aggressive caching headers for images
            add_header Cache-Control "public, max-age=2592000, immutable" always;  # 30 days
            add_header X-Content-Type-Options nosniff always;
            add_header Vary "Accept-Encoding" always;

            # Enable range requests for progressive loading
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;

            # Pass to backend with optimized settings
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Connection pooling and HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Optimized timeouts for images
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings for better streaming
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            proxy_temp_file_write_size 16k;
        }

        # All other API requests
        location /api/ {
            proxy_pass http://backend_servers;

            # Pass headers to backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server $upstream_addr always;

            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Standard timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Root location for any other requests
        location / {
            proxy_pass http://backend_servers;

            # Pass headers to backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Upstream-Server $upstream_addr always;

            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Standard timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr=$upstream_addr '
                    'upstream_response_time=$upstream_response_time '
                    'request_time=$request_time '
                    'cache_status=$upstream_cache_status';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
}
